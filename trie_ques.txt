# include <bits/stdc++.h>

using namespace std;
# define ll long long
# define ld long double
# define rep(i,a,b) for(ll i=a;i<b;i++)
# define vi std::vector<int>
# define vll std::vector<ll>
# define vp vector <pair <ll,ll> >
# define vpp vector <pair <pair <ll,ll>,ll> >
# define pp pair <pair <ll,ll>,ll>
# define pb(x) push_back(x)
# define w(x) ll x=0; cin>>x; while(x--)
# define endl '\n'

void simple_as_Fuck(){
  ios::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);
  #ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin) ;
  freopen("output.txt", "w", stdout) ;
  #endif
}

class node{

public :
    node *left;
    node *right;
    
};

class trie{
  node *root;
  public:
    trie()
    {
      root=new node();
    }

     void insert(int N)
     { node *temp=root;
        for(int i=31;i>=0;i--)
        {
          if((N>>i)&1)
          { 
            if(temp->right==NULL)
            {
                temp->right=new node();
            }
            temp=temp->right;

          }
          else{
            if(temp->left==NULL)
            {
              temp->left=new node();
            }
            temp=temp->left;
          }

        }


     }



int max_xor_helper(int value)
{
  int  ans=0;
  node *temp=root;
  for(int j=31;j>=0;j--)
  {
    int bit=(value>>j)&1;
    
      if(bit==0)
      {
        if(temp->right!=NULL)
        {
          temp=temp->right;
          ans+=(1<<j);
        }
        else{
          temp=temp->left;
        }
      }

      else{
        if(temp->left!=NULL)
        {
          temp=temp->left;
          ans+=(1<<j);
        }
        else{
          temp=temp->right;
        }
      }
    }
    return ans;
  
}






int max_xor(int *input,int n)
{
  int max_xor=0;
  for(int i=0;i<n;i++)
  {
    int val=input[i];
    insert(val);
    int current_max=max_xor_helper(val);
    cout<<" "<<current_max;
    max_xor=max(max_xor,current_max);

  }

return max_xor;
}

};
int main()
{



int input[]={3,10,5,25,2,8};
trie t;
cout<<t.max_xor(input,6);


}